{"version":3,"sources":["components/BaseLayoutStyle.ts","components/Header.tsx","components/MenuComponent.tsx","components/BaseLayout.tsx","containers/AboutStyle.ts","containers/About.tsx","containers/ProjectStyle.ts","containers/Project.tsx","containers/ContactStyle.ts","containers/Contact.tsx","App.tsx","serviceWorker.ts","index.tsx","images/logo-white.png","images/logo-black.png"],"names":["styled","section","theme","BlackLogo","WhiteLogo","Header","props","className","curPage","menuToggle","clockWrap","onClick","setClockWrap","hour","minute","icon","faGithub","setTheme","globalTheme","document","body","style","backgroundColor","MenuComponent","show","width","height","setMenuToggle","setCurPage","BaseLayout","clock","useState","setHour","setMinute","second","setSecond","useEffect","setInterval","dayjs","Date","getTime","format","clearInterval","children","About","isAct","Project","Contact","App","display","justifyContent","paddingTop","alt","src","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"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","file":"static/js/main.c8ce881f.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport WhiteLogo from \"../images/logo-white.png\";\r\nimport BlackLogo from \"../images/logo-black.png\";\r\n\r\nexport default styled.section<{ theme: boolean }>`\r\n  transition: all 0.3s ease;\r\n  height: 100vh;\r\n  background-color: ${({ theme }) =>\r\n    theme === true ? `var(--white-bg-color)` : `var(--dark-bg-color)`};\r\n  color: ${({ theme }) =>\r\n    theme === true ? `var(--white-font-color)` : `var(--dark-font-color)`};\r\n  // 헤더 CSS\r\n  .header-wrap {\r\n    position: fixed;\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    height: 50px;\r\n  }\r\n  .header-wrap,\r\n  .header-nav-wrap,\r\n  .toggle-wrap {\r\n    display: flex;\r\n    align-items: center;\r\n  }\r\n  .header-logo {\r\n    flex: 1;\r\n    height: 30px;\r\n    transition: all 0.3s ease;\r\n    background-image: ${({ theme }) =>\r\n      theme === true ? `url(${BlackLogo})` : `url(${WhiteLogo})`};\r\n    background-size: 30px;\r\n    background-repeat: no-repeat;\r\n  }\r\n  .header-nav-wrap {\r\n    flex: 2;\r\n    justify-content: flex-end;\r\n  }\r\n  .header-icon {\r\n    font-size: 1.25rem;\r\n  }\r\n  .toggle-wrap {\r\n    width: 35px;\r\n    height: 20px;\r\n    border-radius: 30px;\r\n    transition: all 0.3s ease;\r\n    background-color: ${({ theme }) =>\r\n      theme === true\r\n        ? `var(--white-toggle-bg-color)`\r\n        : `var(--dark-toggle-bg-color)`};\r\n    overflow: hidden;\r\n    padding: 0 1px;\r\n    margin-left: 15px;\r\n  }\r\n  .toggle-dot {\r\n    width: 18px;\r\n    height: 18px;\r\n    position: relative;\r\n    left: ${({ theme }) => (theme === true ? \"0px\" : \"17px\")};\r\n    border-radius: 100px;\r\n    transition: all 0.3s ease;\r\n    background-color: #fff;\r\n    box-shadow: 0px 3px 6px rgba(0, 0, 0, 0.7);\r\n  }\r\n  .hamberger-wrap {\r\n    position: fixed;\r\n    z-index: 20;\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    align-items: center;\r\n    height: 50px;\r\n    right: 0;\r\n  }\r\n  .menu-wrap {\r\n    display: flex;\r\n    width: 25px;\r\n    height: 30px;\r\n    margin-right: 15px;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n  }\r\n  .menu-btn-bar {\r\n    width: 100%;\r\n    height: 4px;\r\n    transition: all 0.3s ease;\r\n    background-color: ${({ theme }) =>\r\n      theme === true ? `var(--dark-bg-color)` : `var(--white-bg-color)`};\r\n    margin-bottom: 5px;\r\n  }\r\n  .menu-btn-bar:last-child {\r\n    margin-bottom: 0px;\r\n  }\r\n\r\n  .menu-modal-wrap {\r\n    position: fixed;\r\n    opacity: 0;\r\n    z-index: 0;\r\n    transition: all 0.3s ease;\r\n    background-color: ${({ theme }) =>\r\n      theme === true\r\n        ? `var(--dark-menu-bg-color)`\r\n        : `var(--white-menu-bg-color)`};\r\n    backdrop-filter: blur(7px);\r\n    color: var(--white-font-color);\r\n    width: 100%;\r\n    height: 100%;\r\n    &.show-default {\r\n      display: none;\r\n    }\r\n  }\r\n  .delay-view {\r\n    opacity: 0;\r\n    transition-delay: all 0.6s ease;\r\n    position: absolute;\r\n    opacity: 0;\r\n    z-index: -1;\r\n  }\r\n\r\n  .menu-nav-wrap {\r\n    text-align: center;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    height: 100%;\r\n  }\r\n\r\n  .clock {\r\n    display: flex;\r\n    height: 30px;\r\n    line-height: 35px;\r\n    margin: 0 15px;\r\n    padding: 0 10px;\r\n    transition: all 0.4s ease;\r\n    &:hover {\r\n      background-color: ${({ theme }) =>\r\n        theme === true ? `var(--gray-w-bg-color)` : `var(--gray-b-bg-color)`};\r\n      backdrop-filter: blur(7px);\r\n      -webkit-backdrop-filter: blur(7px);\r\n      border-radius: 6px;\r\n    }\r\n  }\r\n\r\n  .clock-box {\r\n    background-color: ${({ theme }) =>\r\n      theme === true ? `var(--gray-w-bg-color)` : `var(--gray-b-bg-color)`};\r\n    position: fixed;\r\n    overflow: hidden;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    font-size: 16vw;\r\n  }\r\n  // 메인 CSS\r\n  .main-wrap {\r\n    padding-top: 50px;\r\n  }\r\n`;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\ntype Props = {\r\n    globalTheme: boolean;\r\n    setTheme: (bool: boolean) => void;\r\n    menuToggle: \"NONE\" | boolean;\r\n    setMenuToggle: (bool: \"NONE\" | boolean) => void;\r\n    curPage: \"INDEX\" | \"SKILLS\" | \"ABOUT\" | \"PROJECT\" | \"CONTACT\"\r\n    setClockWrap: (bool: boolean) => void;\r\n    clockWrap: \"NONE\" | boolean;\r\n    hour: string;\r\n    minute: string;\r\n}\r\n\r\nfunction Header(props: Props) {\r\n\r\n    return (\r\n        <div className=\"header-wrap pdr-55-l-15\">\r\n            {props.curPage !== \"INDEX\" && <div className={`header-logo ${props.menuToggle === \"NONE\" ? \"show-default\" : props.menuToggle ? \"hide-box\" : \"show-box\"}`} />}\r\n\r\n            <div className=\"header-nav-wrap\">\r\n                <div className={`clock time-font cur ${props.clockWrap === true && \"hide-data\"} ${props.menuToggle === \"NONE\" ? \"show-default\" : props.menuToggle ? \"hide-box\" : \"show-box\"}`}\r\n                    onClick={() => props.setClockWrap(true)}\r\n                >\r\n                    {props.hour} <span className=\"tiktok\">:</span> {props.minute}\r\n\r\n                </div>\r\n\r\n                <div className={`header-icon ${props.menuToggle === \"NONE\" ? \"show-default\" : props.menuToggle ? \"hide-box\" : \"show-box\"}`}>\r\n                    <FontAwesomeIcon icon={faGithub} />\r\n                </div>\r\n                <div className={props.menuToggle === \"NONE\" ? \"show-default\" : props.menuToggle ? \"hide-box\" : \"show-box\"}>\r\n                    <div className=\"toggle-wrap cur\" onClick={() => {\r\n                        props.setTheme(!props.globalTheme)\r\n                        if (props.globalTheme) {\r\n                            document.body.style.backgroundColor = \"#000\"\r\n                        } else {\r\n                            document.body.style.backgroundColor = \"#fff\"\r\n                        }\r\n                    }} >\r\n                        <div className=\"toggle-dot\" />\r\n                    </div>\r\n\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\ntype Props = {\r\n    show: \"NONE\" | boolean;\r\n    setMenuToggle: (bool: \"NONE\" | boolean) => void\r\n    setCurPage: (page: \"INDEX\" | \"ABOUT\" | \"SKILLS\" | \"PROJECT\" | \"CONTACT\") => void;\r\n}\r\n\r\nfunction MenuComponent(props: Props) {\r\n    return (\r\n        <div className={`menu-modal-wrap ${props.show ===\r\n            \"NONE\" ? \"show-default\" : props.show ? \"show-box\" : \"hide-box\"}`}>\r\n            <div className=\"pd-20 menu-nav-wrap\">\r\n                <div style={{ width: '100%', height: '80%' }}>\r\n                    <div className=\"cur\" onClick={() => {\r\n                        props.setMenuToggle(false)\r\n                        props.setCurPage(\"INDEX\")\r\n                    }}><h2>HOME</h2></div>\r\n                    <div className=\"cur\" onClick={() => {\r\n                        props.setMenuToggle(false)\r\n                        props.setCurPage(\"ABOUT\")\r\n                    }}><h2>ABOUT</h2></div>\r\n                    <div className=\"cur\" onClick={() => {\r\n                        props.setMenuToggle(false)\r\n                        props.setCurPage(\"PROJECT\")\r\n                    }}><h2>PROJECT</h2></div>\r\n                    <div className=\"cur\" onClick={() => {\r\n                        props.setMenuToggle(false)\r\n                        props.setCurPage(\"CONTACT\")\r\n                    }}><h2>CONTACT</h2></div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MenuComponent;","import React, { useEffect, useState } from 'react';\r\nimport BaseLayoutWrap from \"./BaseLayoutStyle\";\r\nimport Header from \"./Header\";\r\nimport MenuComponent from './MenuComponent';\r\nimport dayjs from 'dayjs'\r\n\r\ntype Props = {\r\n    children: JSX.Element;\r\n    curPage: \"INDEX\" | \"ABOUT\" | \"SKILLS\" | \"PROJECT\" | \"CONTACT\";\r\n    setCurPage: (page: \"INDEX\" | \"ABOUT\" | \"SKILLS\" | \"PROJECT\" | \"CONTACT\") => void;\r\n    globalTheme: boolean;\r\n    setTheme: (bool: boolean) => void;\r\n}\r\n\r\nfunction BaseLayout(props: Props) {\r\n    const [menuToggle, setMenuToggle] = useState<\"NONE\" | boolean>(\"NONE\")\r\n    const [clockWrap, setClockWrap] = useState<\"NONE\" | boolean>(\"NONE\")\r\n    const [hour, setHour] = useState(\"00\");\r\n    const [minute, setMinute] = useState(\"00\");\r\n    const [second, setSecond] = useState(\"00\");\r\n    let clock;\r\n    function loopFunc() {\r\n        clock = setInterval(() => {\r\n            setHour(dayjs(new Date().getTime()).format(\"HH\"))\r\n            setMinute(dayjs(new Date().getTime()).format(\"mm\"))\r\n            setSecond(dayjs(new Date().getTime()).format(\"ss\"))\r\n        }, 1000)\r\n    }\r\n    useEffect(() => {\r\n        loopFunc()\r\n        return () => {\r\n            clearInterval(clock)\r\n        }\r\n    })\r\n    return (\r\n        <BaseLayoutWrap theme={props.globalTheme}>\r\n            <div className={`clock-box time-font ${clockWrap === \"NONE\" ? \"none-clock\" : clockWrap ? \"show-clock\" : \"hide-clock\"}`} onClick={() => setClockWrap(false)}>\r\n                <div className={`${clockWrap === \"NONE\" ? \"clock-content-none\" : clockWrap ? \"clock-content-show\" : \"clock-content-hide\"}`}> {hour} <span className=\"tiktok\">:</span> {minute}<span className=\"tiktok\">:</span> {second}</div>\r\n            </div>\r\n            <div className=\"hamberger-wrap\">\r\n                <div className={`menu-wrap cur ${menuToggle === \"NONE\" ? \"show-default\" : menuToggle ? \"origin-menu\" : \"trans-menu\"}`} onClick={() => {\r\n                    if (menuToggle === \"NONE\") {\r\n                        setMenuToggle(true)\r\n                    } else {\r\n                        setMenuToggle(!menuToggle)\r\n                    }\r\n                }}>\r\n                    <div className={`menu-btn-bar ${menuToggle === \"NONE\" ? \"show-default\" : menuToggle ? \"ham-ani-1\" : \"ham-ani-none none1\"}`} />\r\n                    <div className={`menu-btn-bar ${menuToggle === \"NONE\" ? \"show-default\" : menuToggle ? \"hide-box\" : \"show-box\"}`} />\r\n                    <div className={`menu-btn-bar ${menuToggle === \"NONE\" ? \"show-default\" : menuToggle ? \"ham-ani-2\" : \"ham-ani-none none2\"}`} />\r\n                </div>\r\n            </div>\r\n            <MenuComponent show={menuToggle} setMenuToggle={setMenuToggle} setCurPage={props.setCurPage} />\r\n            <Header\r\n                globalTheme={props.globalTheme}\r\n                setTheme={props.setTheme}\r\n                menuToggle={menuToggle}\r\n                setMenuToggle={setMenuToggle}\r\n                curPage={props.curPage}\r\n                clockWrap={clockWrap}\r\n                setClockWrap={setClockWrap}\r\n                hour={hour}\r\n                minute={minute}\r\n            />\r\n            {/* 임시 */}\r\n\r\n            {/* 임시 */}\r\n            {/* <div className=\"main-wrap\"> */}\r\n            <div>\r\n                {props.children}\r\n            </div>\r\n\r\n        </BaseLayoutWrap>\r\n    );\r\n}\r\n\r\nexport default BaseLayout;","import styled from \"styled-components\";\r\n\r\nexport default styled.section<{ theme: boolean }>`\r\n  text-align: center;\r\n  .title-wrap {\r\n    font-weight: bolder;\r\n    font-size: 16vw;\r\n  }\r\n  .title-line {\r\n    height: 3px;\r\n    width: 0;\r\n    margin: 0 auto;\r\n    background-color: ${({ theme }) =>\r\n      theme === true ? `var(--dark-bg-color)` : `var(--white-bg-color)`};\r\n    position: relative;\r\n    top: -5vw;\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport AboutWrap from './AboutStyle'\r\n\r\ntype Props = {\r\n    isAct: \"INDEX\" | \"ABOUT\" | \"SKILLS\" | \"PROJECT\" | \"CONTACT\";\r\n    globalTheme: boolean;\r\n}\r\n\r\nexport default function About(props: Props) {\r\n    return (\r\n        <AboutWrap\r\n            className=\"time-font\"\r\n            theme={props.globalTheme}\r\n        >\r\n            <div className=\"title-wrap\">\r\n                ABOUT.\r\n                <div className={`title-line ${props.isAct === \"ABOUT\" && \"under-line-about\"}`} />\r\n            </div>\r\n\r\n        </AboutWrap>\r\n    )\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.section<{ theme: boolean }>`\r\n  text-align: center;\r\n  .title-wrap {\r\n    font-weight: bolder;\r\n    font-size: 16vw;\r\n  }\r\n  .title-line {\r\n    height: 3px;\r\n    width: 0;\r\n    margin: 0 auto;\r\n    background-color: ${({ theme }) =>\r\n      theme === true ? `var(--dark-bg-color)` : `var(--white-bg-color)`};\r\n    position: relative;\r\n    top: -5vw;\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport ProjectWrap from './ProjectStyle'\r\n\r\ntype Props = {\r\n    isAct: \"INDEX\" | \"ABOUT\" | \"SKILLS\" | \"PROJECT\" | \"CONTACT\";\r\n    globalTheme: boolean;\r\n}\r\n\r\nexport default function Project(props: Props) {\r\n    return (\r\n        <ProjectWrap\r\n            className=\"time-font\"\r\n            theme={props.globalTheme}\r\n        >\r\n            <div className=\"title-wrap\">PROJECT.\r\n            <div className={`title-line ${props.isAct === \"PROJECT\" && \"under-line-project\"}`} />\r\n            </div>\r\n\r\n        </ProjectWrap>\r\n    )\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport default styled.section<{ theme: boolean }>`\r\n  text-align: center;\r\n  .title-wrap {\r\n    font-weight: bolder;\r\n    font-size: 14vw;\r\n  }\r\n  .title-line {\r\n    height: 3px;\r\n    width: 0;\r\n    margin: 0 auto;\r\n    background-color: ${({ theme }) =>\r\n      theme === true ? `var(--dark-bg-color)` : `var(--white-bg-color)`};\r\n    position: relative;\r\n    top: -5vw;\r\n  }\r\n`;\r\n","import React from 'react'\r\nimport ContactWrap from './ContactStyle'\r\ntype Props = {\r\n    isAct: \"INDEX\" | \"ABOUT\" | \"SKILLS\" | \"PROJECT\" | \"CONTACT\";\r\n    globalTheme: boolean;\r\n}\r\nexport default function Contact(props: Props) {\r\n    return (\r\n        <ContactWrap\r\n            className=\"time-font\"\r\n            theme={props.globalTheme}\r\n        >\r\n            <div className=\"title-wrap\">CONTACT.\r\n            <div className={`title-line ${props.isAct === \"CONTACT\" && \"under-line-contact\"}`} />\r\n            </div>\r\n        </ContactWrap>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\r\nimport BaseLayout from \"./components/BaseLayout\";\r\nimport WhiteLogo from \"./images/logo-white.png\";\r\nimport BlackLogo from \"./images/logo-black.png\";\r\nimport ABOUT from './containers/About'\r\nimport PROJECT from './containers/Project'\r\nimport CONTACT from './containers/Contact'\r\n\r\nfunction App() {\r\n  const [curPage, setCurPage] = useState<\"INDEX\" | \"ABOUT\" | \"SKILLS\" | \"PROJECT\" | \"CONTACT\">('INDEX');\r\n  const [globalTheme, setTheme] = useState(false)\r\n  return (\r\n    <BaseLayout\r\n      curPage={curPage}\r\n      setCurPage={setCurPage}\r\n      globalTheme={globalTheme}\r\n      setTheme={setTheme}\r\n    >\r\n\r\n      <div style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        paddingTop: 90\r\n      }}>\r\n        <div className={`delay-view ${curPage === \"ABOUT\" && \"show-box_view\"}`}>\r\n          <ABOUT globalTheme={globalTheme} isAct={curPage} />\r\n        </div>\r\n        <div className={`delay-view ${curPage === \"PROJECT\" && \"show-box_view\"}`}>\r\n          <PROJECT globalTheme={globalTheme} isAct={curPage} />\r\n        </div>\r\n        <div className={`delay-view ${curPage === \"CONTACT\" && \"show-box_view\"}`}>\r\n          <CONTACT globalTheme={globalTheme} isAct={curPage} />\r\n        </div>\r\n        <div className={`delay-view ${curPage === \"INDEX\" && \"show-box_view\"}`}>\r\n          <div style={{ width: 350 }}>\r\n            <img alt=\"\" style={{ width: \"100%\" }} src={globalTheme ? BlackLogo : WhiteLogo} />\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n    </BaseLayout>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import 'react-app-polyfill/ie9';\r\nimport 'react-app-polyfill/ie11';\r\nimport 'react-app-polyfill/stable';\r\n\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo-white.526c731b.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-black.ce86f21e.png\";"],"sourceRoot":""}